import { useCallback, useState } from "react";
import "./App.css";
import { Badge, Dialog } from "./components";
import { Button } from "./components/Button";

function App() {
  const [isOpenModal, setIsOpenModal] = useState(false);

  const onClick = useCallback(() => {
    console.log("CLICK");
    setIsOpenModal(true);
  }, []);

  return (
    <div id="App" className="w-full flex flex-col gap-10 items-center">
      <Button onClick={onClick} text="다이얼로그 열기 버튼" />
      <Button
        isOutline
        theme={"success"}
        onClick={onClick}
        text="다이얼로그 열기 버튼"
      />
      <Button
        isOutline
        theme={"warning"}
        onClick={onClick}
        text="다이얼로그 열기 버튼"
      />
      <Button isOutline theme={"error"} onClick={onClick} text="ERROR 버튼" />
      <Button disabled onClick={onClick} text="DISABLED!" />
      <Badge text="SOOK BADGE" />
      <Badge color="#70a6f1" size="md" text="SOOK BADGE" />
      <Badge color="#fb56f8" size="lg" text="SOOK BADGE" />

      {isOpenModal && (
        <Dialog
          size="md"
          handleClosePopup={() => setIsOpenModal(false)}
          handleConfirmPopup={() => setIsOpenModal(false)}
          title={
            "다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다"
          }
        >
          <h1>
            다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다
          </h1>
          <h2>
            다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다
          </h2>
          <p>
            다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다
            다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다
            다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다
            다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다다이얼로그열렸다
          </p>
        </Dialog>
      )}
    </div>
  );
}

export default App;
